import { Switch, GridBox, Button,Palette, ListView, HorizontalBox, CheckBox, StandardButton, VerticalBox, ComboBox, LineEdit } from "std-widgets.slint";
import { FilePathEdit } from "../widgets/text-box.slint";
import { LangTL } from "../applogic.slint";

export struct SettingsData {
    diva-dir: string,
    steam-dir: string,
    aft-dir: string,
    aft-mode: bool,
    dark-mode: bool,
    system-theme: bool,
    system-scale: bool,
    scale: float,
    diva-dirs:[string],
    language: int}

export struct PdDir {
    path: string,
    enabled: bool,
}

export global SettingsLogic {
    callback apply-settings(SettingsData);
    callback cancel();
    callback open-diva-picker(/* Default/Current Path*/ string, int);
    callback open-steam-picker(/* Default/Current Path*/ string);
    callback open-aft-picker(/* Default/Current Path*/ string);
    callback add-pdmm-location();
    callback remove-pdmm-location(int);
    callback change-active(int);
}

export component SettingsWindow inherits Dialog {
    preferred-width: 600px;
    title: "Rust4Diva Settings";

    in-out property <string> steam-dir: "/path/to/steam";
    in-out property <string> diva-dir: "/path/to/pdx";
    in-out property <string> aft-dir: "/path/to/aft";
    in-out property <[string]> pdmm-dirs:["/path/to/pdx", "/path/to/pdx2", "/path/to/pdx3"];
    // in-out property <int> active-pdmm <=> active-dir.current-index;
    in-out property <string> active-pdmm <=> active-dir.current-value;
    in-out property <bool> b-system-theme;
    in-out property <bool> b-system-scale;
    in-out property <bool> b-dark-theme <=> dark-mode.checked;
    in-out property <float> f-scale;
    in-out property <int> i-lang <=> language.current-index;

    property <length> control-text-size: 16px;
    default-font-size: 16px;

    public function set-color-scheme(scheme: ColorScheme) {
        Palette.color-scheme = scheme;
    }
    pure function checked(num: int) -> bool {
        return active-pdmm == num;
    }

    callback cancel();

    GridBox {
        Row {
            Text {
                text: LangTL.get-localized-string("label:language");
                font-size: control-text-size;
            }

            language := ComboBox {
                colspan: 3;
                model: ["English", "日本語", "Español"];
            }
        }

        Row {
            Text {
                text: LangTL.get-localized-string("label:system-theme");
                font-size: control-text-size;
            }

            system-theme := Switch {
                col: 3;
                height: 30px;
                checked: b-system-theme;
            }
        }

        Row {
            Text {
                text: LangTL.get-localized-string("label:dark-mode");
                font-size: control-text-size;
            }

            dark-mode := Switch {
                col: 3;
                height: 30px;
                enabled: !system-theme.checked;
                checked: Palette.color-scheme == ColorScheme.dark;
            }
        }

        Row {
            Text {
                text: LangTL.get-localized-string("label:system-scale");
                font-size: control-text-size;
            }

            system-scale := Switch {
                col: 3;
                height: 30px;
                checked: b-system-scale;
            }
        }

        Row {
            Text {
                text: LangTL.get-localized-string("label:scale");
                font-size: control-text-size;
            }

            scale := LineEdit {
                colspan: 3;
                height: 30px;
                input-type: decimal;
                placeholder-text: "1.0";
                enabled: !system-scale.checked;
                text: f-scale;
            }
        }

        steam-row := Row {
            Text {
                text: LangTL.get-localized-string("label:steam-dir");
                vertical-alignment: center;
                font-size: control-text-size;
            }

            steam-loc := FilePathEdit {
                colspan: 3;
                default-path: steam-dir;
                open-picker => {
                    SettingsLogic.open-steam-picker(steam-dir);
                }
                edited(t) => {
                    steam-dir = t;
                }
            }
        }

        Row {
            Text {
                text: LangTL.get-localized-string("label:active-diva");
                vertical-alignment: center;
                font-size: control-text-size;
            }

            active-dir := ComboBox {
                model: pdmm-dirs;
                colspan: 3;
            }
        }

        pdmm-row := Row {
            Text {
                padding-top: 10px;
                text: LangTL.get-localized-string("label:diva-dirs");
                vertical-alignment: top;
                font-size: control-text-size;
            }

            VerticalBox {
                padding-left: 0px;
                padding-right: 0px;
                colspan: 3;
                Rectangle {
                    background: Palette.control-background;
                    border-radius: 5px;
                    border-color: Palette.border;
                    min-height: clamp(51px * pdmm-dirs.length, 50px, 155px);
                    ListView {
                        for loc[idx] in pdmm-dirs: HorizontalBox {
                            padding: 1px;
                            spacing: 2px;

                            FilePathEdit {
                                default-path: loc;
                                open-picker => {
                                    SettingsLogic.open-diva-picker(pdmm-dirs[idx], idx);
                                }
                                edited(path) => {
                                    root.pdmm-dirs[idx] = path;
                                    if active-dir.current-index == idx {
                                        active-dir.current-value = path;
                                    }
                                }
                            }

                            Rectangle {
                                width: 40px;
                                background: Palette.alternate-background;
                                border-radius: 10px;
                                border-color: Palette.border;
                                border-width: 1px;
                                Image {
                                    height: 20px;
                                    source: @image-url("../assets/trash-can-solid.svg");
                                }

                                i-ta := TouchArea {
                                    clicked => {
                                        if pdmm-dirs.length > 1 {
                                            SettingsLogic.remove-pdmm-location(idx);
                                        }
                                    }
                                }

                                states [
                                    // i-ta.
                                    active when i-ta.has-hover: {
                                        background: Palette.background;
                                    }
                                    // active when i-ta.
                                ]
                            }
                        }
                    }
                }

                Button {
                    icon: @image-url("../assets/plus-solid.svg");
                    colorize-icon: true;
                    clicked => {
                        SettingsLogic.add-pdmm-location();
                    }
                }
            }
        }

        Row {
            Button {
                text: LangTL.get-localized-string("button:apply");
                colspan: 3;
                height: 35px;
                clicked => {
                    SettingsLogic.apply-settings({
                        aft-mode: false,
                        steam-dir: steam-dir,
                        diva-dir: active-pdmm,
                        aft-dir: aft-dir,
                        dark-mode: dark-mode.checked,
                        diva-dirs: pdmm-dirs,
                        system-theme: system-theme.checked,
                        system-scale: system-scale.checked,
                        scale: scale.text.to-float()
                    });
                }
            }

            Button {
                col: 3;
                text: LangTL.get-localized-string("button:cancel");
                height: 35px;
                clicked => {
                    cancel();
                }
            }
        }
    }
}
