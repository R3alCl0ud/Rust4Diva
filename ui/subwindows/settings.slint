import { Switch, GridBox, Button,Palette, ListView, HorizontalBox, CheckBox, StandardButton, VerticalBox } from "std-widgets.slint";
import { FilePathEdit } from "../widgets/text-box.slint";

export struct SettingsData {
    diva-dir: string,
    steam-dir: string,
    aft-dir: string,
    aft-mode: bool,
    dark-mode: bool}


export global SettingsLogic {
    callback apply-settings(SettingsData);
    callback cancel();
    callback open-diva-picker(/* Default/Current Path*/ string);
    callback open-steam-picker(/* Default/Current Path*/ string);
    callback open-aft-picker(/* Default/Current Path*/ string);
    callback add-pdmm-location();
    callback remove-pdmm-location(string);
}

export component SettingsWindow inherits Dialog {
    preferred-width: 600px;
    title: "Rust4Diva Settings";

    in-out property <string> steam-dir: "/path/to/steam";
    in-out property <string> diva-dir: "/path/to/pdx";
    in-out property <string> aft-dir: "/path/to/aft";
    in-out property <[string]> pdmm-dirs:["/path/to/pdx", "/path/to/pdx2"];
    in-out property <int> active-pdmm: 0;
    property <length> control-text-size: 16px;
    default-font-size: 16px;

    public function set-color-scheme(scheme: ColorScheme) {
        Palette.color-scheme = scheme;
    }
    pure function checked(num: int) -> bool {
        return active-pdmm == num;
    }

    callback cancel();

    GridBox {
        Row {
            Text {
                text: "Dark Mode: ";
                font-size: control-text-size;
            }

            dark-mode := Switch {
                col: 3;
                height: 30px;
                checked: Palette.color-scheme == ColorScheme.dark;
            }
        }

        easter-row := Row {
            Text {
                text: "AFT Mode: ";
                font-size: control-text-size;
            }

            aft-mode := Switch {
                col: 3;
                height: 30px;
                enabled: false;
            }
        }

        steam-row := Row {
            Text {
                text: "Steam Location: ";
                vertical-alignment: center;
                font-size: control-text-size;
            }

            steam-loc := FilePathEdit {
                colspan: 3;
                default-path: steam-dir;
                open-picker => {
                    SettingsLogic.open-steam-picker(steam-dir);
                }
                edited(t) => {
                    steam-dir = t;
                }
            }
        }

        pdmm-row := Row {
            Text {
                text: "PDMM+ Location(s): ";
                vertical-alignment: top;
                font-size: control-text-size;
            }

            VerticalBox {
                padding-left: 0px;
                padding-right: 0px;
                colspan: 3;
                Rectangle {
                    background: Palette.control-background;
                    border-radius: 5px;
                    border-color: Palette.border;
                    ListView {
                        for loc[idx] in pdmm-dirs: HorizontalBox {
                            Switch {
                                checked: root.active-pdmm == idx;
                                toggled => {
                                    if self.checked {
                                        root.active-pdmm = idx;
                                    }
                                    debug(idx);
                                    debug(root.active-pdmm);
                                }
                            }

                            FilePathEdit {
                                default-path: loc;
                                open-picker => {
                                    SettingsLogic.open-diva-picker(pdmm-dirs[idx]);
                                }
                                edited(path) => {
                                    pdmm-dirs[idx] = path;
                                }
                            }
                        }
                    }
                }

                Button {
                    text: "Add";
                }
            }
        }

        // Row {
        //     Text {
        //         text: "AFT Location: ";
        //         vertical-alignment: center;
        //         font-size: control-text-size;
        //     }

        //     aft-loc := FilePathEdit {
        //         colspan: 3;
        //         default-path: aft-dir;
        //         open-picker => {
        //             SettingsLogic.open-aft-picker(aft-dir);
        //         }
        //         edited(t) => {
        //         }
        //     }
        // }

        // Row {
        //     Rectangle { }
        // }

        Row {
            Button {
                text: "Apply";
                colspan: 3;
                height: 35px;
                clicked => {
                    SettingsLogic.apply-settings({
                        aft-mode: aft-mode.checked,
                        steam-dir: steam-dir,
                        diva-dir: diva-dir,
                        aft-dir: aft-dir,
                        dark-mode: dark-mode.checked
                    });
                }
            }

            Button {
                col: 3;
                text: "Close";
                height: 35px;
                clicked => {
                    cancel();
                }
            }
        }
    }
}
