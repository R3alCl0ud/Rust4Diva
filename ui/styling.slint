
import { CosmicPalette as Palette, CosmicFontSettings as FontSettings } from "styling/cosmic-styling.slint";
export { Palette, FontSettings }

export global Icons {
    out property <image> left-arrow: @image-url("assets/left-long-solid.svg");
    out property <image> right-arrow: @image-url("assets/right-long-solid.svg");
    out property <image> repeat-arrows: @image-url("assets/repeat-solid.svg");
}

export struct TextStyle {
    font-size: relative-font-size,
    font-weight: int,
}

export global EditorFontSettings {
    out property <int> light-font-weight: 300;
    out property <int> regular-font-weight: 400;
    out property <int> semibold-font-weight: 600;
    out property <int> bold-font-weight: 900;
    
    out property <TextStyle> header: {
        font-size: 18 * 0.0769rem,
        font-weight: root.semibold-font-weight
    };

    out property <TextStyle> body: {
        font-size: 14 * 0.0769rem,
        font-weight: root.regular-font-weight
    };
    
    out property <TextStyle> body-strong: {
        font-size: 16 * 0.0769rem,
        font-weight: root.bold-font-weight
    };
}

export global EditorSpaceSettings {
    in property <length> default-spacing: 8px;
    in property <length> default-padding: 8px;
}

export global EditorSizeSettings {
    in property <length> header-height: 32px;
    in property <length> item-height: 24px;
    in property <length> side-bar-width: 280px;
    in property <length> default-icon-width: 20px;
}

export global EditorPalette {
    out property <brush> state-pressed: root.dark-color-scheme ? #ffffff.with-alpha(0.3) : #000000.with-alpha(0.3);
    out property <brush> state-hovered: root.dark-color-scheme ? #ffffff.with-alpha(0.2) : #000000.with-alpha(0.2);
    
    property <bool> dark-color-scheme: true;
}

export global EditorAnimationSettings {
    out property <duration> color-duration: 200ms;
    out property <duration> roation-duration: 200ms;
}

export global Radius {
    out property <length> small;
    out property <length> medium;
    out property <length> large;
}

