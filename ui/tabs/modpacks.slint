import { GridBox, Button, HorizontalBox, VerticalBox, ComboBox, LineEdit } from "std-widgets.slint";
import { DivaModElement, ModPackElement } from "../diva-types.slint";
import { ModPickTable } from "../widgets/modpack-tables.slint";
import { TextEntryDialog } from "../widgets/text-entry-dialog.slint";
import { ModpackLogic, ModLogic, WindowLogic } from "../applogic.slint";
import { ModTable } from "../widgets/mod-table.slint";
export component ModPacksTab {
    in-out property <[string]> modpacks: ["All Mods"];
    in-out property <[DivaModElement]> mods: [];
    in-out property <[DivaModElement]> pack-mods: [];
    in-out property <bool> pack-modified: false;
    in-out property <string> current-pack <=> packs.current-value;
    in property <int> current-pack-idx;
    in-out property <string> search-term <=> installed-search.text;
    callback show-text-entry();
    property <length> btn-height: 36px;
    callback open-module-ctx(DivaModElement, int, Point);

    changed current-pack-idx => {
        packs.current-index = self.current-pack-idx;
    }

    layout := GridBox {
        selection-controls := Row {

            add-pack-bnt := Button {
                height: btn-height;
                colspan: 1;
                text: "Add New Pack";
                colorize-icon: true;
                icon: @image-url("../assets/plus-solid.svg");
                clicked => {
                    show-text-entry();
                }
            }

            Button {
                height: btn-height;
                colspan: 1;
                text: "Delete Modpack";
                enabled: packs.current-index != -1;
                colorize-icon: true;
                icon: @image-url("../assets/trash-can-solid.svg");
                clicked => {
                    WindowLogic.open-delete-dialog(packs.current-value);
                }
            }

            packs := ComboBox {
                model: modpacks;
                colspan: 8;
                height: btn-height;
                selected(pack) => {
                    ModpackLogic.change-modpack(pack);
                    in-pack.viewport-y = 0;
                }
            }
        }

        labels := Row {
            // height: 20px;
            HorizontalLayout {
                colspan: 2;
                Text {
                    text: "Installed: ";
                    vertical-alignment: center;
                }

                installed-search := LineEdit {
                    height: 35px;
                    // col: 1;
                    edited(search) => {
                        ModLogic.set-search(search);
                    }
                }
            }

            Text {
                col: 3;
                colspan: 7;
                // height: 20px;
                vertical-alignment: center;
                text: "In Modpack";
            }
        }

        main-contents := Row {

            mod-picker := ModPickTable {
                colspan: 2;
                min-width: 200px;
                horizontal-stretch: 3;
                preferred-height: 500px;
                columns: [{ title :"Name" }];
                mods: mods;
            }

            move-btns := VerticalBox {
                col: 2;
                width: 10%;
                Button {
                    enabled: packs.current-index != 0 || (packs.current-value != "All Mods" && packs.current-value != "");
                    height: 48%;
                    colorize-icon: true;
                    icon: @image-url("../assets/right-long-solid.svg");
                    clicked => {
                        if packs.current-index != -1 {
                            if mod-picker.current-row != -1 {
                                ModpackLogic.add-mod-to-pack(mods[mod-picker.current-row], packs.current-value);
                                in-pack.set-current-row(-1);
                                pack-modified = true;
                            }
                        }
                    }
                }

                Button {
                    height: 48%;
                    colorize-icon: true;
                    enabled: pack-mods.length > 0 && (packs.current-index != 0 || (packs.current-value != "All Mods" && packs.current-value != ""));
                    icon: @image-url("../assets/left-long-solid.svg");
                    clicked => {
                        if packs.current-index != -1 {
                            if in-pack.current-row != -1 {
                                ModpackLogic.remove-mod-from-pack(pack-mods[in-pack.current-row], packs.current-value);
                                in-pack.set-current-row(-1);
                                pack-modified = true;
                            }
                        }
                    }
                }
            }

            in-pack := ModTable {
                col: 3;
                colspan: 7;
                columns: [
                    { title: "Enabled", width: 100px },
                    { title: "Priority", width: 100px },
                    { title: "Name", min-width: 200px },
                    { title: "Authors" },
                    { title: "Version", width: 100px },
                    { title: "Description" }
                ];
                mods: pack-mods;
                mod-toggled(index, module) => {
                    ModLogic.toggle-mod(module);
                }
                open-ctx-menu(module, idx, pos) => {
                    open-module-ctx(module, idx, pos);
                }
            }
        }

        packactns := Row {
            Button {
                colspan: 2;
                height: btn-height;
                text: "Reload";
                icon: @image-url("../assets/repeat-solid.svg");
                colorize-icon: true;
                clicked => {
                    ModLogic.load-mods();
                }
            }

            Button {
                col: 3;
                colspan: 7;
                height: btn-height;
                text: "Save";
                icon: @image-url("../assets/file-pen-solid.svg");
                colorize-icon: true;
                clicked => {
                    if packs.current-index > -1 {
                        ModpackLogic.save-modpack(packs.current-value, pack-mods);
                        pack-modified = false;
                    }
                }
            }
        }
    }
}
