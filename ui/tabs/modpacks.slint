import { GridBox, Button, HorizontalBox, VerticalBox } from "std-widgets.slint";
import { DivaModElement, ModPackElement } from "../diva-types.slint";
import { ContextMenu } from "../widgets/context-menu.slint";
import { ModPickTable } from "../widgets/modpack-tables.slint";
import { TextEntryDialog } from "../widgets/text-entry-dialog.slint";
import { ModpackLogic, ModLogic, WindowLogic } from "../applogic.slint";
export component ModPacksTab {
    in-out property <[string]> modpacks: [];
    in-out property <[DivaModElement]> mods;
    in-out property <[DivaModElement]> pack-mods: [];
    in-out property <bool> pack-modified;
    callback show-text-entry();
    property <length> btn-height: 35px;

    packsctx-menu := ContextMenu {
        min_menu_width: packbtn.width - 40px;
        offset_x: -((self.x + self.min_menu_width) - (packbtn.absolute-position.x + packbtn.width));
        offset_y: -((self.y + self.height) - (packbtn.absolute-position.y)) * 2;
        model: modpacks;
        horizontal_alignment: center;
        item-clicked(idx) => {
            debug(self.offset_x);
            ModpackLogic.change-modpack(modpacks[idx]);
            pack-modified = false;
        }
    }

    layout := GridBox {
        selection-controls := Row {
            packbtn := Button {
                height: btn-height;
                col: 0;
                colspan: 5;
                text: packsctx-menu.current_item != -1 ? "Editing: " + packsctx-menu.model[packsctx-menu.current_item] : "No Pack Selected";
                clicked => {
                    if (packsctx-menu.model.length == 0) {
                        return;
                    }
                    packsctx-menu.show_and_focus();
                }
            }

            add-pack-bnt := Button {
                height: btn-height;
                col: 5;
                colspan: 1;
                text: "Add New Pack";
                clicked => {
                    show-text-entry();
                }
            }

            Button {
                height: btn-height;
                col: 6;
                colspan: 1;
                text: "Delete Modpack";
                enabled: packsctx-menu.current_item != -1;
                clicked => {
                    WindowLogic.open-delete-dialog(packsctx-menu.model[packsctx-menu.current_item]);
                }
            }
        }

        labels := Row {
            Text {
                col: 0;
                colspan: 3;
                height: 20px;
                text: "Installed";
            }

            Text {
                col: 4;
                colspan: 3;
                height: 20px;
                text: "In Modpack";
            }
        }

        main-contents := Row {

            mod-picker := ModPickTable {
                col: 0;
                colspan: 3;
                horizontal-stretch: 0.5;
                // width: ;
                preferred-height: 500px;
                columns: [{ title :"Name" }];
                mods: mods;
            }

            move-btns := VerticalBox {
                col: 3;
                rowspan: 1;
                width: 10%;
                Button {
                    height: 48%;
                    colorize-icon: true;
                    icon: @image-url("../assets/right-long-solid.svg");
                    clicked => {
                        if packsctx-menu.current_item != -1 {
                            if mod-picker.current-row != -1 {
                                ModpackLogic.add-mod-to-pack(mods[mod-picker.current-row], modpacks[packsctx-menu.current_item]);
                                packsctx-menu.set-current-item(-1);
                                pack-modified = true;
                            }
                        }
                    }
                }

                Button {
                    height: 48%;
                    colorize-icon: true;
                    enabled: pack-mods.length > 0;
                    icon: @image-url("../assets/left-long-solid.svg");
                    clicked => {
                        if packsctx-menu.current_item != -1 {
                            if in-pack.current-row != -1 {
                                ModpackLogic.remove-mod-from-pack(pack-mods[in-pack.current-row], modpacks[packsctx-menu.current_item]);
                                packsctx-menu.set-current-item(-1);
                                pack-modified = true;
                            }
                        }
                    }
                }
            }

            in-pack := ModPickTable {
                preferred-height: 500px;
                col: 4;
                colspan: 3;
                columns: [{ title :"Name" }];
                mods: pack-mods;
            }
        }

        packactns := Row {
            Button {
                colspan: 3;
                height: btn-height;
                text: "Reload";
                clicked => {
                    ModLogic.load-mods();
                }
            }

            Button {
                col: 4;
                colspan: 3;
                height: btn-height;
                text: "Save";
                clicked => {
                    if packsctx-menu.current_item > -1 {
                        ModpackLogic.save-modpack(modpacks[packsctx-menu.current_item], pack-mods);
                        pack-modified = false;
                    }
                }
            }
        }

        applyactns := Row {
            Button {
                colspan: 3;
                height: btn-height;
                enabled: packsctx-menu.current_item != -1 && !pack-modified;
                text: "Apply Modpack";
                clicked => {
                    ModpackLogic.apply-modpack(pack-mods);
                }
            }

            Button {
                col: 4;
                colspan: 3;
                height: btn-height;
                text: "Repeal Modpacks";
                clicked => {
                    ModpackLogic.apply-modpack([]);
                }
            }
        }
    }
}
