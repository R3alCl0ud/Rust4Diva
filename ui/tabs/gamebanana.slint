import { GbPreviewData, GbPreviewCard, GbPreviewLine} from "../widgets/gb-search-card.slint";
import { VerticalBox, HorizontalBox, ListView, Palette, GridBox, LineEdit, ProgressIndicator, Switch, Button } from "std-widgets.slint";
import { GameBananaLogic } from "../applogic.slint";


export component GameBanana {

    out property <string> s-term;
    in property <bool> loading: false;
    in property <int> n-results: 0;
    in-out property <int> page: 0;
    out property <int> x-displays: 4;
    in property <[GbPreviewData]> results: [
        {
            image: @image-url("../assets/test-preview.jpg"),
            name:"Onneb's Song Pack",
            author: "Onneb",
            item-type:"Mod"
        },
        {
            image: @image-url("../assets/test-preview.jpg"),
            name:"Onneb's Song Pack2",
            author: "Onneb",
            item-type:"Mod"
        },
        {
            image: @image-url("../assets/test-preview.jpg"),
            name:"Onneb's Song Pack3",
            author: "Onneb",
            item-type:"Mod"
        },
        {
            image: @image-url("../assets/test-preview.jpg"),
            name:"Onneb's Song Pack4",
            author: "Onneb",
            item-type:"Mod"
        },
        {
            image: @image-url("../assets/test-preview.jpg"),
            name:"Onneb's Song Pack5",
            author: "Onneb",
            item-type:"Mod"
        },
        {
            image: @image-url("../assets/test-preview.jpg"),
            name:"Onneb's Song Pack6",
            author: "Onneb",
            item-type:"Mod"
        },
        {
            image: @image-url("../assets/test-preview.jpg"),
            name:"Onneb's Song Pack7",
            author: "Onneb",
            item-type:"Mod"
        },
    ];
    init => {
        debug(results.length);
        x-displays = root.width / 245px;
    }

    changed width => {
        x-displays = root.width / 245px;
    }
    GridBox {
        Row {
            Text {
                vertical-alignment: center;
                text: "Search:";
                font-size: 16px;
            }

            s-box := LineEdit {
                col: 1;
                colspan: 4;
                accepted(search) => {
                    page = 1;
                    s-term = search;
                    GameBananaLogic.search(s-term, page);
                }
            }

            ProgressIndicator {
                col: 5;
                indeterminate: loading;
            }

            grid-list := Switch {
                col: 6;
                checked: true;
            }
        }

        Row {
            Rectangle {
                colspan: 7;
                if grid-list.checked: ListView {
                    padding-bottom: 2px;
                    for idy in results.length / x-displays + (mod(results.length, x-displays) == 0 ? 0 : 1): HorizontalBox {
                        for idx in min(results.length - x-displays * idy, x-displays): GbPreviewCard {
                            data: results[idy * x-displays + idx];
                        }
                    }
                }
                if !grid-list.checked: ListView {
                    for result[idx] in results: GbPreviewLine {
                        data: result;
                        idx: idx;
                    }
                }
            }
        }

        Row {
            Button {
                col: 2;
                colspan: 3;
                icon: @image-url("../assets/down-long-solid.svg");
                colorize-icon: true;
                text: "Load More";
                enabled: n-results > results.length && !loading;
                clicked => {
                    if !loading {
                        page += 1;
                        GameBananaLogic.search(s-term, page);
                    }
                }
            }

            Text {
                col: 6;
                text: "Results: " + results.length + "/" + n-results;
                vertical-alignment: center;
            }
        }
    }
}
